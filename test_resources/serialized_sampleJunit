rO0ABXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAAZdwQAAAAZc3IAJ2NvbS50eXNvbi5ocHFjamFwaS50eXBlcy5MaW5rZWRUZXN0Q2FzZSjMngkvOzDIAgAJTAAJY2xhc3NOYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAACaWRxAH4AA0wABG5hbWVxAH4AA0wABnN0YXR1c3QAJUxjb20vdHlzb24vaHBxY2phcGkvdHlwZXMvVGVzdFN0YXR1cztMAAlzeXN0ZW1FcnJxAH4AA0wACXN5c3RlbU91dHEAfgADTAAGdGVzdElkcQB+AANMAAl0ZXN0U3VpdGVxAH4AA0wABHRpbWVxAH4AA3hwdAAVcGtnMS50ZXN0LnRlc3RfdGhpbmdzcHQACnRlc3RfZ2VuOjFzcgAjY29tLnR5c29uLmhwcWNqYXBpLnR5cGVzLlRlc3RTdGF0dXN8uWSSuf1CgwIAAkwAB21lc3NhZ2VxAH4AA0wABHR5cGV0ADFMY29tL3R5c29uL2hwcWNqYXBpL3R5cGVzL1Rlc3RTdGF0dXMkU1RBVFVTX1RZUEU7eHB0ABJObyBmYWlsdXJlcyBmb3VuZC5+cgAvY29tLnR5c29uLmhwcWNqYXBpLnR5cGVzLlRlc3RTdGF0dXMkU1RBVFVTX1RZUEUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZQQVNTRURwcHB0AAtub3NlMi1qdW5pdHQACDAuMDAwMTQxc3EAfgACdAAVcGtnMS50ZXN0LnRlc3RfdGhpbmdzcHQACnRlc3RfZ2VuOjJzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA5M3NxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0AAp0ZXN0X2dlbjozc3EAfgAIcQB+AAtxAH4ADnBwcHEAfgAQdAAIMC4wMDAwODZzcQB+AAJ0ABVwa2cxLnRlc3QudGVzdF90aGluZ3NwdAAKdGVzdF9nZW46NHNxAH4ACHEAfgALcQB+AA5wcHBxAH4AEHQACDAuMDAwMDg2c3EAfgACdAAVcGtnMS50ZXN0LnRlc3RfdGhpbmdzcHQACnRlc3RfZ2VuOjVzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA4N3NxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABV0ZXN0X2dlbl9ub3NlX3N0eWxlOjFzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA4NXNxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABV0ZXN0X2dlbl9ub3NlX3N0eWxlOjJzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA5MHNxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABV0ZXN0X2dlbl9ub3NlX3N0eWxlOjNzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA4NXNxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABV0ZXN0X2dlbl9ub3NlX3N0eWxlOjRzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA4N3NxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABV0ZXN0X2dlbl9ub3NlX3N0eWxlOjVzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA4NnNxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABJ0ZXN0X3BhcmFtc19mdW5jOjFzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA5M3NxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABJ0ZXN0X3BhcmFtc19mdW5jOjJzcQB+AAh0ASR0ZXN0IGZhaWx1cmU6IApUcmFjZWJhY2sgKG1vc3QgcmVjZW50IGNhbGwgbGFzdCk6CiAgRmlsZSAibm9zZTIvcGx1Z2lucy9sb2FkZXIvcGFyYW1ldGVycy5weSIsIGxpbmUgMTYyLCBpbiBmdW5jCiAgICByZXR1cm4gb2JqKCphcmdTZXQpCiAgRmlsZSAibm9zZTIvdGVzdHMvZnVuY3Rpb25hbC9zdXBwb3J0L3NjZW5hcmlvL3Rlc3RzX2luX3BhY2thZ2UvcGtnMS90ZXN0L3Rlc3RfdGhpbmdzLnB5IiwgbGluZSA2NCwgaW4gdGVzdF9wYXJhbXNfZnVuYwogICAgYXNzZXJ0IGEgPT0gMQpBc3NlcnRpb25FcnJvcgoKfnEAfgAMdAAGRkFJTEVEcHBwcQB+ABB0AAgwLjAwMDA5OHNxAH4AAnQAFXBrZzEudGVzdC50ZXN0X3RoaW5nc3B0ABx0ZXN0X3BhcmFtc19mdW5jX211bHRpX2FyZzoxc3EAfgAIcQB+AAtxAH4ADnBwcHEAfgAQdAAIMC4wMDAwOTRzcQB+AAJ0ABVwa2cxLnRlc3QudGVzdF90aGluZ3NwdAAcdGVzdF9wYXJhbXNfZnVuY19tdWx0aV9hcmc6MnNxAH4ACHQBLnRlc3QgZmFpbHVyZTogClRyYWNlYmFjayAobW9zdCByZWNlbnQgY2FsbCBsYXN0KToKICBGaWxlICJub3NlMi9wbHVnaW5zL2xvYWRlci9wYXJhbWV0ZXJzLnB5IiwgbGluZSAxNjIsIGluIGZ1bmMKICAgIHJldHVybiBvYmooKmFyZ1NldCkKICBGaWxlICJub3NlMi90ZXN0cy9mdW5jdGlvbmFsL3N1cHBvcnQvc2NlbmFyaW8vdGVzdHNfaW5fcGFja2FnZS9wa2cxL3Rlc3QvdGVzdF90aGluZ3MucHkiLCBsaW5lIDY5LCBpbiB0ZXN0X3BhcmFtc19mdW5jX211bHRpX2FyZwogICAgYXNzZXJ0IGEgPT0gYgpBc3NlcnRpb25FcnJvcgoKcQB+AElwcHBxAH4AEHQACDAuMDAwMDg5c3EAfgACdAAVcGtnMS50ZXN0LnRlc3RfdGhpbmdzcHQAHHRlc3RfcGFyYW1zX2Z1bmNfbXVsdGlfYXJnOjNzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA5NnNxAH4AAnQAAHB0AAl0ZXN0X2ZpeHRzcQB+AAhxAH4AC3EAfgAOcHBwcQB+ABB0AAgwLjAwMDA5MXNxAH4AAnEAfgBdcHQACXRlc3RfZnVuY3NxAH4ACHEAfgALcQB+AA5wcHBxAH4AEHQACDAuMDAwMDg0c3EAfgACdAAfcGtnMS50ZXN0LnRlc3RfdGhpbmdzLlNvbWVUZXN0c3B0AAt0ZXN0X2ZhaWxlZHNxAH4ACHQA3XRlc3QgZmFpbHVyZTogClRyYWNlYmFjayAobW9zdCByZWNlbnQgY2FsbCBsYXN0KToKICBGaWxlICJub3NlMi90ZXN0cy9mdW5jdGlvbmFsL3N1cHBvcnQvc2NlbmFyaW8vdGVzdHNfaW5fcGFja2FnZS9wa2cxL3Rlc3QvdGVzdF90aGluZ3MucHkiLCBsaW5lIDE3LCBpbiB0ZXN0X2ZhaWxlZAogICAgYXNzZXJ0IEZhbHNlLCAiSSBmYWlsZWQiCkFzc2VydGlvbkVycm9yOiBJIGZhaWxlZAoKcQB+AElwcHBxAH4AEHQACDAuMDAwMTEzc3EAfgACdAAfcGtnMS50ZXN0LnRlc3RfdGhpbmdzLlNvbWVUZXN0c3B0AAd0ZXN0X29rc3EAfgAIcQB+AAtxAH4ADnBwcHEAfgAQdAAIMC4wMDAwOTNzcQB+AAJ0AB9wa2cxLnRlc3QudGVzdF90aGluZ3MuU29tZVRlc3RzcHQAFHRlc3RfcGFyYW1zX21ldGhvZDoxc3EAfgAIcQB+AAtxAH4ADnBwcHEAfgAQdAAIMC4wMDAwOTlzcQB+AAJ0AB9wa2cxLnRlc3QudGVzdF90aGluZ3MuU29tZVRlc3RzcHQAFHRlc3RfcGFyYW1zX21ldGhvZDoyc3EAfgAIdAFDdGVzdCBmYWlsdXJlOiAKVHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIm5vc2UyL3BsdWdpbnMvbG9hZGVyL3BhcmFtZXRlcnMucHkiLCBsaW5lIDE0NCwgaW4gX21ldGhvZAogICAgcmV0dXJuIG1ldGhvZChzZWxmLCAqYXJnU2V0KQogIEZpbGUgIm5vc2UyL3Rlc3RzL2Z1bmN0aW9uYWwvc3VwcG9ydC9zY2VuYXJpby90ZXN0c19pbl9wYWNrYWdlL3BrZzEvdGVzdC90ZXN0X3RoaW5ncy5weSIsIGxpbmUgMjksIGluIHRlc3RfcGFyYW1zX21ldGhvZAogICAgc2VsZi5hc3NlcnRFcXVhbChhLCAxKQpBc3NlcnRpb25FcnJvcjogMiAhPSAxCgpxAH4ASXBwcHEAfgAQdAAIMC4wMDAxMDFzcQB+AAJ0AB9wa2cxLnRlc3QudGVzdF90aGluZ3MuU29tZVRlc3RzcHQAC3Rlc3Rfc2tpcHB5c3EAfgAIcQB+AAtxAH4ADnBwcHEAfgAQdAAIMC4wMDAxMDRzcQB+AAJ0AB9wa2cxLnRlc3QudGVzdF90aGluZ3MuU29tZVRlc3RzcHQADHRlc3RfdHlwZWVycnNxAH4ACHEAfgALcQB+AA5wcHBxAH4AEHQACDAuMDAwMDk2c3EAfgACdAAfcGtnMS50ZXN0LnRlc3RfdGhpbmdzLlNvbWVUZXN0c3B0ABF0ZXN0X2dlbl9tZXRob2Q6MXNxAH4ACHEAfgALcQB+AA5wcHBxAH4AEHQACDAuMDAwMDk0c3EAfgACdAAfcGtnMS50ZXN0LnRlc3RfdGhpbmdzLlNvbWVUZXN0c3B0ABF0ZXN0X2dlbl9tZXRob2Q6MnNxAH4ACHQBGnRlc3QgZmFpbHVyZTogClRyYWNlYmFjayAobW9zdCByZWNlbnQgY2FsbCBsYXN0KToKICBGaWxlICJub3NlMi9wbHVnaW5zL2xvYWRlci9nZW5lcmF0b3JzLnB5IiwgbGluZSAxNDUsIGluIG1ldGhvZAogICAgcmV0dXJuIGZ1bmMoKmFyZ3MpCiAgRmlsZSAibm9zZTIvdGVzdHMvZnVuY3Rpb25hbC9zdXBwb3J0L3NjZW5hcmlvL3Rlc3RzX2luX3BhY2thZ2UvcGtnMS90ZXN0L3Rlc3RfdGhpbmdzLnB5IiwgbGluZSAyNCwgaW4gY2hlY2sKICAgIGFzc2VydCB4ID09IDEKQXNzZXJ0aW9uRXJyb3IKCnEAfgBJcHBwcQB+ABB0AAgwLjAwMDA5MHg=